#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '(dexador lquery) :silent t))

(defpackage :ros.script.scrapazine.3890583014
  (:use :cl))

(in-package :ros.script.scrapazine.3890583014)

(defconstant +link+ "https://vintageapple.org/byte/")

(defconstant +output-file+ "./url.txt")

(defvar *parsed-content*
  (lquery:$ (initialize (dex:get +link+))))

(defvar *list-links*
  (let ((vector-links (lquery:$  *parsed-content* "a" (attr :href))))
    (mapcar (lambda (x) (concatenate 'string +link+ x))
	    (cddr (cddddr (coerce vector-links 'list))))))

(defun out-to-file (path)
  "write list to file"
  (with-open-file (stream path
			  :direction
			  :output
			  :if-exists :overwrite
			  :if-does-not-exist :create)
    (loop
      for i
	in *list-links*
      do (format stream i)
	 (terpri stream))))

(defun main (&rest argv)
  (declare (ignorable argv))
  (out-to-file +output-file+)
  (uiop:run-program
   (format nil "wget -i ~a -P output" +output-file+)))

(handler-case
    (main)
  (sb-sys:interactive-interrupt () (progn
                                     (format *error-output* "~%Abort.~&")
                                     (sb-ext:quit))))
;;; vim: set ft=lisp lisp:
